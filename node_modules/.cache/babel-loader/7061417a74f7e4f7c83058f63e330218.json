{"ast":null,"code":"import _slicedToArray from\"/home/ivan/projects/arlekino-backend/arlekino/assets/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,Fragment}from'react';import{FormattedMessage,injectIntl}from'react-intl';import Styled from'./styled/StyledTopDevicesSub';import DevicesSubTable from'./styled/TopDevicesSubTable';import StyledDeleteIcon from'./styled/StyledDeleteIcon';import StyledEditIcon from'./styled/StyledEditIcon';import StyledIconPanel from'./styled/StyledIconPanel';import DeleteDeviceModal from'../../../Modal/DeleteDeviceModal/DeleteDeviceModal';import StyledTooltip from'../../../styled/StyledTooltip';import AddDeviceModal from'../../../Modal/AddDeviceModal/AddDeviceModal';import StyledInput from'./styled/StyledInput';var devicesTest=[{name:\"Телевизор на кухне\",date:\"купить\",isSubscribe:false},{name:\"Детская\",date:\"05.05.21\",isSubscribe:true},{name:\"Спальня\",date:\"05.06.20\",isSubscribe:false}];var TopDevicesSub=function TopDevicesSub(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isVisible=_useState2[0],setVisibility=_useState2[1];var toggleVisibility=function toggleVisibility(){setVisibility(!isVisible);};var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isEditable=_useState4[0],setEditable=_useState4[1];var toggleEditable=function toggleEditable(){setEditable(!isEditable);};var EditDevice=function EditDevice(){toggleEditable();};var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isVisibleAdd=_useState6[0],setVisibilityAdd=_useState6[1];var toggleVisibilityAdd=function toggleVisibilityAdd(){setVisibilityAdd(!isVisibleAdd);};return/*#__PURE__*/React.createElement(Styled.TopDevicesSub,null,/*#__PURE__*/React.createElement(\"header\",null,/*#__PURE__*/React.createElement(\"h5\",null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"TopDevicesSub.Title\"})),/*#__PURE__*/React.createElement(\"span\",{onClick:toggleVisibilityAdd},/*#__PURE__*/React.createElement(FormattedMessage,{id:\"TopDevicesSub.Add\"}))),/*#__PURE__*/React.createElement(Styled.Content,null,/*#__PURE__*/React.createElement(DevicesSubTable.Table,null,/*#__PURE__*/React.createElement(DevicesSubTable.TableLeft,null,devicesTest.map(function(device){return/*#__PURE__*/React.createElement(StyledInput,{key:device.date,defaultValue:device.name,name:\"login\",readOnly:!isEditable});})),/*#__PURE__*/React.createElement(DevicesSubTable.TableRight,null,devicesTest.map(function(device){return/*#__PURE__*/React.createElement(Fragment,{key:device.name},device.isSubscribe?/*#__PURE__*/React.createElement(\"div\",{key:device.name},/*#__PURE__*/React.createElement(StyledTooltip,{autoAdjustOverflow:true,arrowPointAtCenter:true,placement:\"topLeft\",title:/*#__PURE__*/React.createElement(FormattedMessage,{id:\"Tooltip.dateTopBlock\"})},/*#__PURE__*/React.createElement(\"p\",null,device.date)),/*#__PURE__*/React.createElement(StyledIconPanel,null,/*#__PURE__*/React.createElement(StyledEditIcon,null),/*#__PURE__*/React.createElement(StyledDeleteIcon,{onClick:toggleVisibility}))):/*#__PURE__*/React.createElement(\"div\",{key:device.name},/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(\"span\",null,device.date)),/*#__PURE__*/React.createElement(StyledIconPanel,null,/*#__PURE__*/React.createElement(StyledEditIcon,null),/*#__PURE__*/React.createElement(StyledDeleteIcon,{onClick:toggleVisibility}))));})))),/*#__PURE__*/React.createElement(DeleteDeviceModal,{isVisible:isVisible,toggleVisibility:toggleVisibility}),/*#__PURE__*/React.createElement(AddDeviceModal,{isVisible:isVisibleAdd,toggleVisibility:toggleVisibilityAdd}));};export default injectIntl(TopDevicesSub);","map":{"version":3,"sources":["/home/ivan/projects/arlekino-backend/arlekino/assets/frontend/src/components/PageTop/styled/TopDevicesSub/TopDevicesSub.jsx"],"names":["React","useState","Fragment","FormattedMessage","injectIntl","Styled","DevicesSubTable","StyledDeleteIcon","StyledEditIcon","StyledIconPanel","DeleteDeviceModal","StyledTooltip","AddDeviceModal","StyledInput","devicesTest","name","date","isSubscribe","TopDevicesSub","isVisible","setVisibility","toggleVisibility","isEditable","setEditable","toggleEditable","EditDevice","isVisibleAdd","setVisibilityAdd","toggleVisibilityAdd","map","device"],"mappings":"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","sourcesContent":["import React, { useState, Fragment  } from 'react'\nimport { FormattedMessage, injectIntl } from 'react-intl'\nimport Styled from './styled/StyledTopDevicesSub'\nimport DevicesSubTable from './styled/TopDevicesSubTable'\nimport StyledDeleteIcon from './styled/StyledDeleteIcon'\nimport StyledEditIcon from './styled/StyledEditIcon'\nimport StyledIconPanel from './styled/StyledIconPanel'\nimport DeleteDeviceModal from '../../../Modal/DeleteDeviceModal/DeleteDeviceModal'\nimport StyledTooltip from '../../../styled/StyledTooltip'\nimport AddDeviceModal from '../../../Modal/AddDeviceModal/AddDeviceModal'\nimport StyledInput from './styled/StyledInput'\n\nconst devicesTest = [\n  {\n    name: \"Телевизор на кухне\",\n    date: \"купить\",\n    isSubscribe: false\n  },\n  {\n    name: \"Детская\",\n    date: \"05.05.21\",\n    isSubscribe: true\n  },\n  {\n    name: \"Спальня\",\n    date: \"05.06.20\",\n    isSubscribe: false\n  }\n]\n\nconst TopDevicesSub = () => {\n  const [ isVisible, setVisibility ] = useState(false);\n  const toggleVisibility = () => {\n    setVisibility(!isVisible);\n  };\n\n  const [ isEditable, setEditable ] = useState(false);\n  const toggleEditable = () => {\n    setEditable(!isEditable)\n  };\n\n  const EditDevice = () => {\n    toggleEditable();\n  }\n\n  const [ isVisibleAdd, setVisibilityAdd ] = useState(false);\n  const toggleVisibilityAdd = () => {\n    setVisibilityAdd(!isVisibleAdd);\n  };\n\n\n  return (\n    <Styled.TopDevicesSub>\n      <header>\n        <h5><FormattedMessage id='TopDevicesSub.Title' /></h5>\n        <span onClick={toggleVisibilityAdd} ><FormattedMessage id='TopDevicesSub.Add' /></span>\n      </header>\n\n      <Styled.Content>\n\n        <DevicesSubTable.Table>\n          <DevicesSubTable.TableLeft>\n            {\n              devicesTest.map(device => (\n                <StyledInput\n                  key={device.date}\n                  defaultValue={ device.name }\n                  name=\"login\"\n                  readOnly={ !isEditable }\n                />\n                )\n              )\n            }\n          </DevicesSubTable.TableLeft>\n\n          <DevicesSubTable.TableRight>\n            {\n              devicesTest.map(device => (\n                <Fragment key={device.name}>\n                  {device.isSubscribe ? (\n                    <div key={device.name} >\n                      <StyledTooltip\n                        autoAdjustOverflow\n                        arrowPointAtCenter\n                        placement= 'topLeft'\n                        title={<FormattedMessage id=\"Tooltip.dateTopBlock\" />}>\n                        <p>{ device.date }</p>\n                      </StyledTooltip>\n\n                      <StyledIconPanel>\n                        <StyledEditIcon />\n                        <StyledDeleteIcon onClick={toggleVisibility} />\n                      </StyledIconPanel>\n\n                    </div>\n                  ) : (\n                    <div key={device.name} >\n                      <p><span>{ device.date }</span></p>\n                      <StyledIconPanel>\n                        <StyledEditIcon />\n                        <StyledDeleteIcon onClick={toggleVisibility} />\n                      </StyledIconPanel>\n                    </div>\n                    )\n                  }\n                </Fragment>\n              ))\n            }\n          </DevicesSubTable.TableRight>\n        </DevicesSubTable.Table>\n      </Styled.Content>\n\n      <DeleteDeviceModal isVisible={isVisible} toggleVisibility={toggleVisibility}/>\n      <AddDeviceModal  isVisible={isVisibleAdd} toggleVisibility={toggleVisibilityAdd}/>\n    </Styled.TopDevicesSub>\n  )\n}\nexport default injectIntl(TopDevicesSub );\n"]},"metadata":{},"sourceType":"module"}