{"ast":null,"code":"import _slicedToArray from\"/home/ivan/projects/arlekino-backend/arlekino/assets/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{injectIntl}from'react-intl';import StyledInput from'./styled/StyledInput';import StyledInputPassword from'./styled/StyledInputPassword';import{Form}from'antd';import StyledUserFormPanel from'./styled/StyledUserFormPanel';import StyledEditIcon from'./styled/StyledEditIcon';import StyledForm from'./styled/StyledForm';import StyledAcceptIcon from'./styled/StyledAcceptIcon';var UserForm=function UserForm(_ref){var handleSubmit=_ref.handleSubmit,formName=_ref.formName,intl=_ref.intl;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isEditable=_useState2[0],setEditable=_useState2[1];var toggleEditable=function toggleEditable(){setEditable(!isEditable);};var _Form$useForm=Form.useForm(),_Form$useForm2=_slicedToArray(_Form$useForm,1),form=_Form$useForm2[0];return/*#__PURE__*/React.createElement(StyledForm,null,/*#__PURE__*/React.createElement(Form,{form:form,layout:\"horizontal\"},/*#__PURE__*/React.createElement(Form.Item,{label:intl.formatMessage({id:'FormUser.Login'}),rules:[{required:true,message:'Заполните поле'}]},/*#__PURE__*/React.createElement(StyledInput,{name:\"login\",defaultValue:'valeriy_p',readOnly:!isEditable}),/*#__PURE__*/React.createElement(StyledUserFormPanel,{editable:true},!isEditable?/*#__PURE__*/React.createElement(StyledEditIcon,{onClick:toggleEditable}):/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(StyledAcceptIcon,{onClick:toggleEditable}),/*#__PURE__*/React.createElement(\"i\",{onClick:toggleEditable})))),/*#__PURE__*/React.createElement(Form.Item,{label:intl.formatMessage({id:'FormUser.Password'}),rules:[{required:true,message:'Заполните поле'}]},/*#__PURE__*/React.createElement(StyledInputPassword,{value:'valeriy_p',name:\"pass\",readOnly:true})),/*#__PURE__*/React.createElement(Form.Item,{label:intl.formatMessage({id:'FormUser.Email'}),rules:[{required:true,message:'Заполните поле'}]},/*#__PURE__*/React.createElement(StyledInput,{value:'valeriy@mail.ru',placeholder:'valeriy@mail.ru',name:\"mail\",readOnly:true}))));};export default injectIntl(UserForm);","map":{"version":3,"sources":["/home/ivan/projects/arlekino-backend/arlekino/assets/frontend/src/components/Forms/UserForm/UserForm.jsx"],"names":["React","useState","injectIntl","StyledInput","StyledInputPassword","Form","StyledUserFormPanel","StyledEditIcon","StyledForm","StyledAcceptIcon","UserForm","handleSubmit","formName","intl","isEditable","setEditable","toggleEditable","useForm","form","formatMessage","id","required","message"],"mappings":"oLAAA,MAAOA,CAAAA,KAAP,EAAiBC,QAAjB,KAAiC,OAAjC,CACA,OAASC,UAAT,KAA2B,YAA3B,CACA,MAAOC,CAAAA,WAAP,KAAwB,sBAAxB,CACA,MAAOC,CAAAA,mBAAP,KAAgC,8BAAhC,CACA,OAASC,IAAT,KAAqB,MAArB,CACA,MAAOC,CAAAA,mBAAP,KAAgC,8BAAhC,CACA,MAAOC,CAAAA,cAAP,KAA2B,yBAA3B,CACA,MAAOC,CAAAA,UAAP,KAAuB,qBAAvB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,2BAA7B,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAIX,IAHJC,CAAAA,YAGI,MAHJA,YAGI,CAFJC,QAEI,MAFJA,QAEI,CADJC,IACI,MADJA,IACI,eACgCZ,QAAQ,CAAC,KAAD,CADxC,wCACIa,UADJ,eACgBC,WADhB,eAEJ,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CAC3BD,WAAW,CAAC,CAACD,UAAF,CAAX,CACD,CAFD,CAFI,kBAKWT,IAAI,CAACY,OAAL,EALX,gDAKGC,IALH,mBAOJ,mBACE,oBAAC,UAAD,mBACE,oBAAC,IAAD,EAAM,IAAI,CAAEA,IAAZ,CAAkB,MAAM,CAAC,YAAzB,eACE,oBAAC,IAAD,CAAM,IAAN,EACE,KAAK,CAAEL,IAAI,CAACM,aAAL,CAAmB,CAACC,EAAE,CAAE,gBAAL,CAAnB,CADT,CAEE,KAAK,CAAE,CACL,CACEC,QAAQ,CAAE,IADZ,CAEEC,OAAO,CAAE,gBAFX,CADK,CAFT,eASE,oBAAC,WAAD,EACE,IAAI,CAAC,OADP,CAEE,YAAY,CAAE,WAFhB,CAGE,QAAQ,CAAG,CAACR,UAHd,EATF,cAcE,oBAAC,mBAAD,EAAqB,QAAQ,CAAE,IAA/B,EACI,CAACA,UAAF,cAEG,oBAAC,cAAD,EAAgB,OAAO,CAAEE,cAAzB,EAFH,cAMG,qDACE,oBAAC,gBAAD,EAAkB,OAAO,CAAEA,cAA3B,EADF,cAEE,yBAAG,OAAO,CAAEA,cAAZ,EAFF,CAPN,CAdF,CADF,cAgCE,oBAAC,IAAD,CAAM,IAAN,EACE,KAAK,CAAEH,IAAI,CAACM,aAAL,CAAmB,CAACC,EAAE,CAAE,mBAAL,CAAnB,CADT,CAEE,KAAK,CAAE,CACL,CACEC,QAAQ,CAAE,IADZ,CAEEC,OAAO,CAAE,gBAFX,CADK,CAFT,eAUE,oBAAC,mBAAD,EACE,KAAK,CAAE,WADT,CAEE,IAAI,CAAC,MAFP,CAGE,QAAQ,CAAG,IAHb,EAVF,CAhCF,cAkDE,oBAAC,IAAD,CAAM,IAAN,EACE,KAAK,CAAET,IAAI,CAACM,aAAL,CAAmB,CAACC,EAAE,CAAE,gBAAL,CAAnB,CADT,CAEE,KAAK,CAAE,CACL,CACEC,QAAQ,CAAE,IADZ,CAEEC,OAAO,CAAE,gBAFX,CADK,CAFT,eASE,oBAAC,WAAD,EACE,KAAK,CAAE,iBADT,CAEE,WAAW,CAAE,iBAFf,CAGE,IAAI,CAAC,MAHP,CAIE,QAAQ,CAAG,IAJb,EATF,CAlDF,CADF,CADF,CAwED,CAnFD,CAoFA,cAAepB,CAAAA,UAAU,CAACQ,QAAD,CAAzB","sourcesContent":["import React , { useState } from 'react'\nimport { injectIntl } from 'react-intl'\nimport StyledInput from './styled/StyledInput'\nimport StyledInputPassword from './styled/StyledInputPassword'\nimport { Form } from 'antd'\nimport StyledUserFormPanel from './styled/StyledUserFormPanel'\nimport StyledEditIcon from './styled/StyledEditIcon'\nimport StyledForm from './styled/StyledForm'\nimport StyledAcceptIcon from './styled/StyledAcceptIcon'\n\nconst UserForm = ({\n  handleSubmit,\n  formName,\n  intl\n}) => {\n  const [ isEditable, setEditable ] = useState(false);\n  const toggleEditable = () => {\n    setEditable(!isEditable);\n  };\n  const [form] = Form.useForm();\n\n  return (\n    <StyledForm>\n      <Form form={form} layout=\"horizontal\">\n        <Form.Item\n          label={intl.formatMessage({id: 'FormUser.Login'})}\n          rules={[\n            {\n              required: true,\n              message: 'Заполните поле',\n            },\n          ]}\n        >\n          <StyledInput\n            name=\"login\"\n            defaultValue={'valeriy_p'}\n            readOnly={ !isEditable }\n          />\n          <StyledUserFormPanel editable={true}>\n            {(!isEditable)?\n              (\n                <StyledEditIcon onClick={toggleEditable} />\n              )\n              :\n              (\n                <>\n                  <StyledAcceptIcon onClick={toggleEditable}></StyledAcceptIcon>\n                  <i onClick={toggleEditable}></i>\n                </>\n              )\n            }\n          </StyledUserFormPanel>\n\n        </Form.Item>\n\n        <Form.Item\n          label={intl.formatMessage({id: 'FormUser.Password'})}\n          rules={[\n            {\n              required: true,\n              message: 'Заполните поле',\n            },\n          ]}\n        >\n\n          <StyledInputPassword\n            value={'valeriy_p'}\n            name=\"pass\"\n            readOnly={ true }\n\n          />\n        </Form.Item>\n\n        <Form.Item\n          label={intl.formatMessage({id: 'FormUser.Email'})}\n          rules={[\n            {\n              required: true,\n              message: 'Заполните поле',\n            },\n          ]}\n        >\n          <StyledInput\n            value={'valeriy@mail.ru'}\n            placeholder={'valeriy@mail.ru'}\n            name=\"mail\"\n            readOnly={ true }\n\n          />\n        </Form.Item>\n      </Form>\n    </StyledForm>\n  )\n};\nexport default injectIntl(UserForm);"]},"metadata":{},"sourceType":"module"}