{"ast":null,"code":"var _jsxFileName = \"/home/ivan/projects/arlekino-backend/arlekino/assets/frontend/src/components/PageTop/styled/TopDevicesSub/TopDevicesSub.jsx\";\nimport React, { useState, Fragment } from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl'; //import Styled from './styled/StyledTopDevicesSub'\n\nimport DevicesSubTable from './styled/TopDevicesSubTable';\nimport StyledDeleteIcon from './styled/StyledDeleteIcon';\nimport StyledEditIcon from './styled/StyledEditIcon';\nimport StyledIconPanel from './styled/StyledIconPanel';\nimport DeleteDeviceModal from '../../../Modal/DeleteDeviceModal/DeleteDeviceModal';\nimport StyledTooltip from '../../../styled/StyledTooltip';\nimport AddDeviceModal from '../../../Modal/AddDeviceModal/AddDeviceModal';\nimport StyledInput from './styled/StyledInput';\nimport axios from 'axios';\n\nconst componentDidMount = () => {\n  axios.get(`${axios.defaults.baseURL}/people`).then(res => {\n    const people = res.data;\n    this.setState({\n      people\n    });\n  });\n};\n\nconst devicesTest = [{\n  name: \"Телевизор на кухне\",\n  date: \"купить\",\n  isSubscribe: false\n}, {\n  name: \"Детская\",\n  date: \"05.05.21\",\n  isSubscribe: true\n}, {\n  name: \"Спальня\",\n  date: \"05.06.20\",\n  isSubscribe: false\n}];\n/*const TopDevicesSub = () => {\n  const [ isVisible, setVisibility ] = useState(false);\n  const toggleVisibility = () => {\n    setVisibility(!isVisible);\n  };\n\n  const [ isEditable, setEditable ] = useState(false);\n  const toggleEditable = () => {\n    setEditable(!isEditable)\n  };\n\n  const EditDevice = () => {\n    toggleEditable();\n  }\n\n  const [ isVisibleAdd, setVisibilityAdd ] = useState(false);\n  const toggleVisibilityAdd = () => {\n    setVisibilityAdd(!isVisibleAdd);\n  };\n\n\n  return (\n    <Styled.TopDevicesSub>\n      <header>\n        <h5><FormattedMessage id='TopDevicesSub.Title' /></h5>\n        <span onClick={toggleVisibilityAdd} ><FormattedMessage id='TopDevicesSub.Add' /></span>\n      </header>\n\n      <Styled.Content>\n\n        <DevicesSubTable.Table>\n          <DevicesSubTable.TableLeft>\n            {\n              devicesTest.map(device => (\n                <StyledInput\n                  key={device.date}\n                  defaultValue={ device.name }\n                  name=\"login\"\n                  readOnly={ !isEditable }\n                />\n                )\n              )\n            }\n          </DevicesSubTable.TableLeft>\n\n          <DevicesSubTable.TableRight>\n            {\n              devicesTest.map(device => (\n                <Fragment key={device.name}>\n                  {device.isSubscribe ? (\n                    <div key={device.name} >\n                      <StyledTooltip\n                        autoAdjustOverflow\n                        arrowPointAtCenter\n                        placement= 'topLeft'\n                        title={<FormattedMessage id=\"Tooltip.dateTopBlock\" />}>\n                        <p>{ device.date }</p>\n                      </StyledTooltip>\n\n                      <StyledIconPanel>\n                        <StyledEditIcon />\n                        <StyledDeleteIcon onClick={toggleVisibility} />\n                      </StyledIconPanel>\n\n                    </div>\n                  ) : (\n                    <div key={device.name} >\n                      <p><span>{ device.date }</span></p>\n                      <StyledIconPanel>\n                        <StyledEditIcon />\n                        <StyledDeleteIcon onClick={toggleVisibility} />\n                      </StyledIconPanel>\n                    </div>\n                    )\n                  }\n                </Fragment>\n              ))\n            }\n          </DevicesSubTable.TableRight>\n        </DevicesSubTable.Table>\n      </Styled.Content>\n\n      <DeleteDeviceModal isVisible={isVisible} toggleVisibility={toggleVisibility}/>\n      <AddDeviceModal  isVisible={isVisibleAdd} toggleVisibility={toggleVisibilityAdd}/>\n    </Styled.TopDevicesSub>\n  )\n}\nexport default injectIntl(TopDevicesSub );*/\n\nclass Dashboard extends React.Component {\n  componentDidMount() {\n    console.log('component mounted');\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Dashboard, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 16\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["/home/ivan/projects/arlekino-backend/arlekino/assets/frontend/src/components/PageTop/styled/TopDevicesSub/TopDevicesSub.jsx"],"names":["React","useState","Fragment","FormattedMessage","injectIntl","DevicesSubTable","StyledDeleteIcon","StyledEditIcon","StyledIconPanel","DeleteDeviceModal","StyledTooltip","AddDeviceModal","StyledInput","axios","componentDidMount","get","defaults","baseURL","then","res","people","data","setState","devicesTest","name","date","isSubscribe","Dashboard","Component","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA2C,OAA3C;AACA,SAASC,gBAAT,EAA2BC,UAA3B,QAA6C,YAA7C,C,CACA;;AACA,OAAOC,eAAP,MAA4B,6BAA5B;AACA,OAAOC,gBAAP,MAA6B,2BAA7B;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,OAAOC,eAAP,MAA4B,0BAA5B;AACA,OAAOC,iBAAP,MAA8B,oDAA9B;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,OAAOC,cAAP,MAA2B,8CAA3B;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,iBAAiB,GAAG,MAAM;AAC5BD,EAAAA,KAAK,CAACE,GAAN,CAAW,GAAEF,KAAK,CAACG,QAAN,CAAeC,OAAQ,SAApC,EACGC,IADH,CACQC,GAAG,IAAI;AACX,UAAMC,MAAM,GAAED,GAAG,CAACE,IAAlB;AACA,SAAKC,QAAL,CAAc;AAAEF,MAAAA;AAAF,KAAd;AACD,GAJH;AAKD,CANH;;AASA,MAAMG,WAAW,GAAG,CAClB;AACEC,EAAAA,IAAI,EAAE,oBADR;AAEEC,EAAAA,IAAI,EAAE,QAFR;AAGEC,EAAAA,WAAW,EAAE;AAHf,CADkB,EAMlB;AACEF,EAAAA,IAAI,EAAE,SADR;AAEEC,EAAAA,IAAI,EAAE,UAFR;AAGEC,EAAAA,WAAW,EAAE;AAHf,CANkB,EAWlB;AACEF,EAAAA,IAAI,EAAE,SADR;AAEEC,EAAAA,IAAI,EAAE,UAFR;AAGEC,EAAAA,WAAW,EAAE;AAHf,CAXkB,CAApB;AAkBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyFA,MAAMC,SAAN,SAAwB3B,KAAK,CAAC4B,SAA9B,CAAwC;AAEpCd,EAAAA,iBAAiB,GAAG;AAChBe,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBAAO,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AARmC","sourcesContent":["import React, { useState, Fragment  } from 'react'\nimport { FormattedMessage, injectIntl } from 'react-intl'\n//import Styled from './styled/StyledTopDevicesSub'\nimport DevicesSubTable from './styled/TopDevicesSubTable'\nimport StyledDeleteIcon from './styled/StyledDeleteIcon'\nimport StyledEditIcon from './styled/StyledEditIcon'\nimport StyledIconPanel from './styled/StyledIconPanel'\nimport DeleteDeviceModal from '../../../Modal/DeleteDeviceModal/DeleteDeviceModal'\nimport StyledTooltip from '../../../styled/StyledTooltip'\nimport AddDeviceModal from '../../../Modal/AddDeviceModal/AddDeviceModal'\nimport StyledInput from './styled/StyledInput'\nimport axios from 'axios';\n\nconst componentDidMount = () => {\n    axios.get(`${axios.defaults.baseURL}/people`)\n      .then(res => {\n        const people= res.data;\n        this.setState({ people});\n      })\n  }\n\n\nconst devicesTest = [\n  {\n    name: \"Телевизор на кухне\",\n    date: \"купить\",\n    isSubscribe: false\n  },\n  {\n    name: \"Детская\",\n    date: \"05.05.21\",\n    isSubscribe: true\n  },\n  {\n    name: \"Спальня\",\n    date: \"05.06.20\",\n    isSubscribe: false\n  }\n]\n\n/*const TopDevicesSub = () => {\n  const [ isVisible, setVisibility ] = useState(false);\n  const toggleVisibility = () => {\n    setVisibility(!isVisible);\n  };\n\n  const [ isEditable, setEditable ] = useState(false);\n  const toggleEditable = () => {\n    setEditable(!isEditable)\n  };\n\n  const EditDevice = () => {\n    toggleEditable();\n  }\n\n  const [ isVisibleAdd, setVisibilityAdd ] = useState(false);\n  const toggleVisibilityAdd = () => {\n    setVisibilityAdd(!isVisibleAdd);\n  };\n\n\n  return (\n    <Styled.TopDevicesSub>\n      <header>\n        <h5><FormattedMessage id='TopDevicesSub.Title' /></h5>\n        <span onClick={toggleVisibilityAdd} ><FormattedMessage id='TopDevicesSub.Add' /></span>\n      </header>\n\n      <Styled.Content>\n\n        <DevicesSubTable.Table>\n          <DevicesSubTable.TableLeft>\n            {\n              devicesTest.map(device => (\n                <StyledInput\n                  key={device.date}\n                  defaultValue={ device.name }\n                  name=\"login\"\n                  readOnly={ !isEditable }\n                />\n                )\n              )\n            }\n          </DevicesSubTable.TableLeft>\n\n          <DevicesSubTable.TableRight>\n            {\n              devicesTest.map(device => (\n                <Fragment key={device.name}>\n                  {device.isSubscribe ? (\n                    <div key={device.name} >\n                      <StyledTooltip\n                        autoAdjustOverflow\n                        arrowPointAtCenter\n                        placement= 'topLeft'\n                        title={<FormattedMessage id=\"Tooltip.dateTopBlock\" />}>\n                        <p>{ device.date }</p>\n                      </StyledTooltip>\n\n                      <StyledIconPanel>\n                        <StyledEditIcon />\n                        <StyledDeleteIcon onClick={toggleVisibility} />\n                      </StyledIconPanel>\n\n                    </div>\n                  ) : (\n                    <div key={device.name} >\n                      <p><span>{ device.date }</span></p>\n                      <StyledIconPanel>\n                        <StyledEditIcon />\n                        <StyledDeleteIcon onClick={toggleVisibility} />\n                      </StyledIconPanel>\n                    </div>\n                    )\n                  }\n                </Fragment>\n              ))\n            }\n          </DevicesSubTable.TableRight>\n        </DevicesSubTable.Table>\n      </Styled.Content>\n\n      <DeleteDeviceModal isVisible={isVisible} toggleVisibility={toggleVisibility}/>\n      <AddDeviceModal  isVisible={isVisibleAdd} toggleVisibility={toggleVisibilityAdd}/>\n    </Styled.TopDevicesSub>\n  )\n}\nexport default injectIntl(TopDevicesSub );*/\n\nclass Dashboard extends React.Component {\n\n    componentDidMount() {\n        console.log('component mounted');\n    }\n\n    render() {\n        return <Dashboard />;\n    }\n\n}\n\n"]},"metadata":{},"sourceType":"module"}