{"ast":null,"code":"import{applyMiddleware,compose,createStore}from'redux';import createSagaMiddleware from'redux-saga';import{routerMiddleware}from'connected-react-router';import initialState from'./initialState';import rootReducers from'../services/root.reducers';import rootSaga from'../services/root.sagas';import{history}from'../routes/urlLocations';var sagaMiddleware=createSagaMiddleware();var reduxRouterMiddleware=routerMiddleware(history);var middleware=[reduxRouterMiddleware,sagaMiddleware];var composeEnhancers=window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__||compose;var store=createStore(rootReducers,initialState,composeEnhancers(applyMiddleware.apply(void 0,middleware)));sagaMiddleware.run(rootSaga);export default store;console.log(store.getState());//","map":{"version":3,"sources":["/home/ivan/projects/arlekino-backend/arlekino/assets/frontend/src/store/index.js"],"names":["applyMiddleware","compose","createStore","createSagaMiddleware","routerMiddleware","initialState","rootReducers","rootSaga","history","sagaMiddleware","reduxRouterMiddleware","middleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","run","console","log","getState"],"mappings":"AAAA,OAASA,eAAT,CAA0BC,OAA1B,CAAmCC,WAAnC,KAAsD,OAAtD,CACA,MAAOC,CAAAA,oBAAP,KAAiC,YAAjC,CACA,OAASC,gBAAT,KAAiC,wBAAjC,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CACA,MAAOC,CAAAA,YAAP,KAAyB,2BAAzB,CACA,MAAOC,CAAAA,QAAP,KAAqB,wBAArB,CACA,OAASC,OAAT,KAAwB,wBAAxB,CAEA,GAAMC,CAAAA,cAAc,CAAGN,oBAAoB,EAA3C,CACA,GAAMO,CAAAA,qBAAqB,CAAGN,gBAAgB,CAACI,OAAD,CAA9C,CAEA,GAAMG,CAAAA,UAAU,CAAG,CAACD,qBAAD,CAAwBD,cAAxB,CAAnB,CACA,GAAMG,CAAAA,gBAAgB,CAAGC,MAAM,CAACC,oCAAP,EAA+Cb,OAAxE,CAEA,GAAMc,CAAAA,KAAK,CAAGb,WAAW,CACvBI,YADuB,CAEvBD,YAFuB,CAGvBO,gBAAgB,CAACZ,eAAe,MAAf,QAAmBW,UAAnB,CAAD,CAHO,CAAzB,CAMAF,cAAc,CAACO,GAAf,CAAmBT,QAAnB,EAEA,cAAeQ,CAAAA,KAAf,CAEAE,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACI,QAAN,EAAZ,EAA8B","sourcesContent":["import { applyMiddleware, compose, createStore } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\nimport { routerMiddleware } from 'connected-react-router'\nimport initialState from './initialState'\nimport rootReducers from '../services/root.reducers'\nimport rootSaga from '../services/root.sagas'\nimport { history } from '../routes/urlLocations'\n\nconst sagaMiddleware = createSagaMiddleware()\nconst reduxRouterMiddleware = routerMiddleware(history)\n\nconst middleware = [reduxRouterMiddleware, sagaMiddleware]\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst store = createStore(\n  rootReducers,\n  initialState,\n  composeEnhancers(applyMiddleware(...middleware))\n)\n\nsagaMiddleware.run(rootSaga)\n\nexport default store\n\nconsole.log(store.getState()) //\n"]},"metadata":{},"sourceType":"module"}